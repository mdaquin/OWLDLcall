<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
         xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
         xmlns:owl="http://www.w3.org/2002/07/owl#"
         xml:base="https://k.loria.fr/ontologies/examples/equations"
         xmlns="https://k.loria.fr/ontologies/examples/equations#"
         xmlns:call="https://k.loria.fr/ontologies/call#">

<owl:Ontology rdf:about="https://k.loria.fr/ontologies/examples/equations">
  <owl:imports rdf:resource="https://k.loria.fr/ontologies/call"/>
</owl:Ontology>

<owl:ObjectProperty rdf:about="#hasCharacteristicPolynomial">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="#Polynomial"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasEquation">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasRootSet">
  <rdfs:range rdf:resource="#SolutionSet"/>
  <owl:propertyChainAxiom>
    <rdf:Description>
      <rdf:first rdf:resource="#hasEquation"/>
      <rdf:rest>
        <rdf:Description>
          <rdf:first rdf:resource="#hasSolutionSet"/>
          <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        </rdf:Description>
      </rdf:rest>
    </rdf:Description>
  </owl:propertyChainAxiom>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasSolutionSet">
  <rdfs:domain rdf:resource="#Equation2ndDegree"/>
  <rdfs:range rdf:resource="#SolutionSet"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasSolution">
  <rdfs:domain rdf:resource="#Problem"/>
  <rdfs:range rdf:resource="#Solution"/>
  <owl:propertyChainAxiom>
    <rdf:Description>
      <rdf:first rdf:resource="#hasEquation"/>
      <rdf:rest>
        <rdf:Description>
          <rdf:first rdf:resource="#hasSolutionSet"/>
          <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        </rdf:Description>
      </rdf:rest>
    </rdf:Description>
  </owl:propertyChainAxiom>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasSolvingMethod"/>

<owl:ObjectProperty rdf:about="#hasUnknown">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="#Unknown"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isPreferredTo"/>

<owl:DatatypeProperty rdf:about="#degree">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:domain rdf:resource="#PolynomialEquation"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasEquality">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasExpression">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:domain>
    <owl:Class>
      <owl:unionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Matrix"/>
        <rdf:Description rdf:about="#Polynomial"/>
      </owl:unionOf>
    </owl:Class>
  </rdfs:domain>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasName">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasRoot">
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasType">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#isAPolynomialEquation">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#isASquareMatrix">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
</owl:DatatypeProperty>

<owl:Class rdf:about="#Polynomial">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasExpression"/>
      <owl:cardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:cardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
  <call:hasDatatypeProperty rdf:resource="#hasExpression"/>
</owl:Class>

<owl:Class rdf:about="#SolutionSet">
  <rdfs:subClassOf rdf:resource="#Solution"/>
  <rdfs:subClassOf>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasRoot"/>
          <owl:allValuesFrom rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        </owl:Restriction>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasRoot"/>
          <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">0</owl:minCardinality>
        </owl:Restriction>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasRoot"/>
          <owl:maxCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:maxCardinality>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </rdfs:subClassOf>
  <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">represents the roots of a second degree equation. (depends on the used method)

Warning, this isn't the class representing the solutions of the problem of solving a second degree equation (which is the Solution class).</rdfs:comment>
</owl:Class>

<owl:Class rdf:about="#Problem">
  <owl:disjointWith rdf:resource="#SolutionSet"/>
</owl:Class>

<owl:Class rdf:about="#Solution"/>

<owl:Class rdf:about="#Equation2ndDegree">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#PolynomialEquation"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#degree"/>
          <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</owl:hasValue>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#PolynomialEquation"/>
</owl:Class>

<owl:Class rdf:about="#Unknown">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasName"/>
      <owl:cardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:cardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:Class rdf:about="#PolynomialEquation">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Equation1RealUnknown"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#isAPolynomialEquation"/>
          <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:hasValue>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#Equation1RealUnknown"/>
</owl:Class>

<owl:Class rdf:about="#Matrix"/>

<owl:Class rdf:about="#Equation">
  <owl:disjointWith rdf:resource="#SolutionSet"/>
</owl:Class>

<owl:Class rdf:about="#Equation1RealUnknown">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Equation"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasUnknown"/>
          <owl:onClass>
            <owl:Restriction>
              <owl:onProperty rdf:resource="#hasType"/>
              <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</owl:hasValue>
            </owl:Restriction>
          </owl:onClass>
          <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:qualifiedCardinality>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#Equation"/>
</owl:Class>

<owl:Class rdf:about="#Equation2ndDegreeObviousRoots">
  <rdfs:subClassOf>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#SolutionSet"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasSolvingMethod"/>
          <owl:hasValue rdf:resource="#findObviousRootEqDeg2"/>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </rdfs:subClassOf>
  <call:hasDatatypeProperty rdf:resource="#hasRoot"/>
  <rdfs:subClassOf rdf:resource="#SolutionSet"/>
  <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DatatypeProperty annotations are essential to understand which property has to be set when the call create an instance.
Right now, it only works with one datatypeProperty per class. (With multiple ones, it's difficult to know which one relates to which result of the called function)</rdfs:comment>
</owl:Class>

<owl:Class rdf:about="#Equation2ndDegreeRealRoots">
  <rdfs:subClassOf>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#SolutionSet"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasSolvingMethod"/>
          <owl:hasValue rdf:resource="#useDiscriminant"/>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </rdfs:subClassOf>
  <call:hasDatatypeProperty rdf:resource="#hasRoot"/>
  <rdfs:subClassOf rdf:resource="#SolutionSet"/>
</owl:Class>

<owl:Class rdf:about="#EquationSolving">
  <rdfs:subClassOf>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Problem"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasEquation"/>
          <owl:someValuesFrom rdf:resource="#Equation"/>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </rdfs:subClassOf>
  <rdfs:subClassOf rdf:resource="#Problem"/>
</owl:Class>

<owl:Class rdf:about="#FindingEigenValues">
  <rdfs:subClassOf rdf:resource="#Problem"/>
</owl:Class>

<owl:Class rdf:about="#RealUnknown">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Unknown"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasType"/>
          <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</owl:hasValue>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#Unknown"/>
</owl:Class>

<owl:Class rdf:about="#SquareMatrix">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Matrix"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#isASquareMatrix"/>
          <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:hasValue>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#Matrix"/>
</owl:Class>

<owl:NamedIndividual rdf:about="#findObviousRootEqDeg2">
  <isPreferredTo rdf:resource="#useDiscriminant"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def poly_obvious_roots(unk_name: str, equality: str):
    import sympy as sp
    unk = sp.symbols(unk_name)
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    else:
        eq = sp.Eq(sp.simplify(eq_str[0]), sp.simplify(eq_str[1])).simplify().as_poly()
        roots = []
        for value in range(-2, 3):
            subst_expr = eq.subs(unk, value)
            res = subst_expr.evalf()
            if res == 0:
                roots.append(value)
        return roots</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">poly_obvious_roots</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#useDiscriminant">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def poly_roots(unk_name: str, equality: str):
    import sympy as sp
    unk = sp.symbols(unk_name)
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    else:
        eq = sp.Eq(sp.simplify(eq_str[0]), sp.simplify(eq_str[1])).simplify().as_poly()
        roots = list(set(sp.roots(eq)))
        return roots</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">poly_roots</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callDegree">
  <call:functionToCall rdf:resource="#funDegree"/>
  <call:hasParams rdf:resource="#equationsCallParam1"/>
  <call:domain rdf:resource="#PolynomialEquation"/>
  <call:range rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
  <call:subsumingProperty rdf:resource="#degree"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funDegree">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def poly_degree(unk_name: str, equality: str):
    import sympy as sp
    unk = sp.symbols(unk_name)
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    else:
        eq = sp.Eq(sp.sympify(eq_str[0]), sp.sympify(eq_str[1]), evaluate=False).simplify().as_poly(unk)
        if eq is None:
            return None
        else:
            deg = eq.degree(unk)
            return -1 if deg == -sp.oo else deg</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">poly_degree</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equationsCallParam1">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:paramListHead rdf:resource="#equationsCallPropChain1"/>
  <call:paramListTail rdf:resource="#equationsCallParam2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callFindObviousRootEqDeg2">
  <call:functionToCall rdf:resource="#findObviousRootEqDeg2"/>
  <call:hasParams rdf:resource="#equationsCallParam1"/>
  <call:domain rdf:resource="#Equation2ndDegree"/>
  <call:range rdf:resource="#Equation2ndDegreeObviousRoots"/>
  <call:subsumingProperty rdf:resource="#hasSolutionSet"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callGetCharacteristicPol">
  <call:functionToCall rdf:resource="#funComputeCharPol"/>
  <call:hasParams rdf:resource="#matrixCallParam"/>
  <call:domain rdf:resource="#SquareMatrix"/>
  <call:range rdf:resource="#Polynomial"/>
  <call:subsumingProperty rdf:resource="#hasCharacteristicPolynomial"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funComputeCharPol">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def computeCharPol(expr:str):
    import sympy as sp
    mat = sp.Matrix(eval(expr))
    if not mat.is_square:
        return None
    else:
        return str(mat.charpoly("X").as_expr())</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">computeCharPol</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#matrixCallParam">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:paramListHead rdf:resource="#matrixCallPropChain"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callIsAPolynomialEquation">
  <call:functionToCall rdf:resource="#funIsAPolynomialEquation"/>
  <call:hasParams rdf:resource="#equationsCallParam1"/>
  <call:domain rdf:resource="#Equation1RealUnknown"/>
  <call:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
  <call:subsumingProperty rdf:resource="#isAPolynomialEquation"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funIsAPolynomialEquation">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def is_polynomial(unk_name: str, equality: str):
    import sympy as sp
    unk = sp.symbols(unk_name)
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    else:
        eq = sp.Eq(sp.sympify(eq_str[0]), sp.sympify(eq_str[1]), evaluate=False).simplify().as_poly(unk)
        return True if eq is not None else None</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">is_polynomial</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callIsASquareMatrix">
  <call:functionToCall rdf:resource="#funIsASquareMatrix"/>
  <call:hasParams rdf:resource="#matrixCallParam"/>
  <call:domain rdf:resource="#Matrix"/>
  <call:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
  <call:subsumingProperty rdf:resource="#isASquareMatrix"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funIsASquareMatrix">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def matrix_is_squared(expr:str):
    import sympy as sp
    mat = sp.Matrix(eval(expr))
    return mat.is_square</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">matrix_is_squared</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callUseDiscriminant">
  <call:functionToCall rdf:resource="#useDiscriminant"/>
  <call:hasParams rdf:resource="#equationsCallParam1"/>
  <call:domain rdf:resource="#Equation2ndDegree"/>
  <call:range rdf:resource="#Equation2ndDegreeRealRoots"/>
  <call:subsumingProperty rdf:resource="#hasSolutionSet"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#eq1">
  <rdf:type rdf:resource="#Equation1RealUnknown"/>
  <hasUnknown rdf:resource="#unk1"/>
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <rdf:type rdf:resource="#Equation2ndDegree"/>
  <hasSolutionSet rdf:resource="#equation2nddegreeobviousroots1"/>
  <hasSolutionSet rdf:resource="#equation2nddegreerealroots1"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">x ** 2 + 2 = -3 * x</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#unk1">
  <rdf:type rdf:resource="#RealUnknown"/>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">x</hasName>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#eq2">
  <rdf:type rdf:resource="#Equation1RealUnknown"/>
  <hasUnknown rdf:resource="#unk2"/>
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <rdf:type rdf:resource="#Equation2ndDegree"/>
  <hasSolutionSet rdf:resource="#equation2nddegreeobviousroots2"/>
  <hasSolutionSet rdf:resource="#equation2nddegreerealroots2"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">t ** 2 + 4 * t + 1 = 0</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#unk2">
  <rdf:type rdf:resource="#RealUnknown"/>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">t</hasName>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#eq3">
  <rdf:type rdf:resource="#Equation1RealUnknown"/>
  <hasUnknown rdf:resource="#unk1"/>
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">1</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">4 * x = 2</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#eq4">
  <rdf:type rdf:resource="#Equation1RealUnknown"/>
  <hasUnknown rdf:resource="#unk1"/>
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <rdf:type rdf:resource="#Equation2ndDegree"/>
  <hasSolutionSet rdf:resource="#equation2nddegreeobviousroots3"/>
  <hasSolutionSet rdf:resource="#equation2nddegreerealroots3"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">2*x ** 2 + 4*x + 2 = 0</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equationsCallPropChain1">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:hasObjectPropertyList rdf:resource="#equationsCallPropChain1List"/>
  <call:hasDatatypeProperty rdf:resource="#hasName"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equationsCallParam2">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:paramListHead rdf:resource="#equationsCallPropChain2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equationsCallPropChain2">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:hasDatatypeProperty rdf:resource="#hasEquality"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equationsCallPropChain1List">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ObjectPropertyList"/>
  <call:objectPropertyListHead rdf:resource="#hasUnknown"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#mat1">
  <rdf:type rdf:resource="#Matrix"/>
  <rdf:type rdf:resource="#SquareMatrix"/>
  <hasCharacteristicPolynomial rdf:resource="#polynomial1"/>
  <hasExpression rdf:datatype="http://www.w3.org/2001/XMLSchema#string">[[2, 1], [1, 2]]</hasExpression>
  <isASquareMatrix rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isASquareMatrix>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#matrixCallPropChain">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:hasDatatypeProperty rdf:resource="#hasExpression"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pb1">
  <rdf:type rdf:resource="#EquationSolving"/>
  <hasEquation rdf:resource="#eq1"/>
  <hasSolvingMethod rdf:resource="#useDiscriminant"/>
  <hasSolvingMethod rdf:resource="#findObviousRootEqDeg2"/>
  <hasSolution rdf:resource="#equation2nddegreeobviousroots1"/>
  <hasRootSet rdf:resource="#equation2nddegreeobviousroots1"/>
  <hasSolution rdf:resource="#equation2nddegreerealroots1"/>
  <hasRootSet rdf:resource="#equation2nddegreerealroots1"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pb2">
  <rdf:type rdf:resource="#EquationSolving"/>
  <hasEquation rdf:resource="#eq2"/>
  <hasSolvingMethod rdf:resource="#useDiscriminant"/>
  <hasSolvingMethod rdf:resource="#findObviousRootEqDeg2"/>
  <hasRootSet rdf:resource="#equation2nddegreeobviousroots2"/>
  <hasSolution rdf:resource="#equation2nddegreeobviousroots2"/>
  <hasSolution rdf:resource="#equation2nddegreerealroots2"/>
  <hasRootSet rdf:resource="#equation2nddegreerealroots2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#polynomial1">
  <rdf:type rdf:resource="#Polynomial"/>
  <hasExpression rdf:datatype="http://www.w3.org/2001/XMLSchema#string">X**2 - 4*X + 3</hasExpression>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equation2nddegreeobviousroots1">
  <rdf:type rdf:resource="#Equation2ndDegreeObviousRoots"/>
  <hasSolvingMethod rdf:resource="#findObviousRootEqDeg2"/>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-1</hasRoot>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-2</hasRoot>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equation2nddegreerealroots1">
  <rdf:type rdf:resource="#Equation2ndDegreeRealRoots"/>
  <hasSolvingMethod rdf:resource="#useDiscriminant"/>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-1</hasRoot>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-2</hasRoot>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equation2nddegreeobviousroots2">
  <rdf:type rdf:resource="#Equation2ndDegreeObviousRoots"/>
  <hasSolvingMethod rdf:resource="#findObviousRootEqDeg2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equation2nddegreerealroots2">
  <rdf:type rdf:resource="#Equation2ndDegreeRealRoots"/>
  <hasSolvingMethod rdf:resource="#useDiscriminant"/>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-2 - sqrt(3)</hasRoot>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-2 + sqrt(3)</hasRoot>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equation2nddegreeobviousroots3">
  <rdf:type rdf:resource="#Equation2ndDegreeObviousRoots"/>
  <hasSolvingMethod rdf:resource="#findObviousRootEqDeg2"/>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-1</hasRoot>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equation2nddegreerealroots3">
  <rdf:type rdf:resource="#Equation2ndDegreeRealRoots"/>
  <hasSolvingMethod rdf:resource="#useDiscriminant"/>
  <hasRoot rdf:datatype="http://www.w3.org/2001/XMLSchema#string">-1</hasRoot>
</owl:NamedIndividual>

<rdf:Description rdf:about="https://k.loria.fr/ontologies/call#PythonFunction">
  <rdfs:subClassOf rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
</rdf:Description>

<rdf:Description rdf:about="https://k.loria.fr/ontologies/call#HTTPFunction">
  <rdfs:subClassOf rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
</rdf:Description>

<owl:AllDisjointProperties>
  <owl:members rdf:parseType="Collection">
    <rdf:Description rdf:about="#hasEquation"/>
    <rdf:Description rdf:about="#hasSolvingMethod"/>
    <rdf:Description rdf:about="#hasUnknown"/>
    <rdf:Description rdf:about="#isPreferredTo"/>
  </owl:members>
</owl:AllDisjointProperties>

<owl:AllDisjointClasses>
  <owl:members rdf:parseType="Collection">
    <rdf:Description rdf:about="#Equation"/>
    <rdf:Description rdf:about="#Matrix"/>
    <rdf:Description rdf:about="#Problem"/>
    <rdf:Description rdf:about="#Solution"/>
  </owl:members>
</owl:AllDisjointClasses>

<owl:Class>
  <owl:intersectionOf rdf:parseType="Collection">
    <rdf:Description rdf:about="#EquationSolving"/>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasEquation"/>
      <owl:someValuesFrom rdf:resource="#Equation2ndDegree"/>
    </owl:Restriction>
  </owl:intersectionOf>
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasSolvingMethod"/>
      <owl:hasValue rdf:resource="#useDiscriminant"/>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:Class>
  <owl:intersectionOf rdf:parseType="Collection">
    <rdf:Description rdf:about="#EquationSolving"/>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasEquation"/>
      <owl:someValuesFrom rdf:resource="#Equation2ndDegree"/>
    </owl:Restriction>
  </owl:intersectionOf>
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasSolvingMethod"/>
      <owl:hasValue rdf:resource="#findObviousRootEqDeg2"/>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>


</rdf:RDF>
