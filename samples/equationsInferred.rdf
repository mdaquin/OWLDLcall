<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
         xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
         xmlns:owl="http://www.w3.org/2002/07/owl#"
         xml:base="https://k.loria.fr/ontologies/examples/equations"
         xmlns="https://k.loria.fr/ontologies/examples/equations#"
         xmlns:call="https://k.loria.fr/ontologies/call#">

<owl:Ontology rdf:about="https://k.loria.fr/ontologies/examples/equations">
  <owl:imports rdf:resource="https://k.loria.fr/ontologies/call"/>
</owl:Ontology>

<owl:ObjectProperty rdf:about="#hasEquation">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="#Equation"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasMatrix">
  <rdfs:range rdf:resource="#Matrix"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasPolynomial"/>

<owl:ObjectProperty rdf:about="#hasSolution">
  <rdfs:domain rdf:resource="#Problem"/>
  <rdfs:range rdf:resource="#Solution"/>
  <owl:propertyChainAxiom>
    <rdf:Description>
      <rdf:first rdf:resource="#hasSolutionSet"/>
      <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    </rdf:Description>
  </owl:propertyChainAxiom>
  <owl:propertyChainAxiom>
    <rdf:Description>
      <rdf:first rdf:resource="#hasSubProblem"/>
      <rdf:rest>
        <rdf:Description>
          <rdf:first rdf:resource="#hasSolution"/>
          <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        </rdf:Description>
      </rdf:rest>
    </rdf:Description>
  </owl:propertyChainAxiom>
  <owl:propertyChainAxiom>
    <rdf:Description>
      <rdf:first rdf:resource="#hasSubProblem"/>
      <rdf:rest>
        <rdf:Description>
          <rdf:first rdf:resource="#hasSolutionSet"/>
          <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        </rdf:Description>
      </rdf:rest>
    </rdf:Description>
  </owl:propertyChainAxiom>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasSolutionSet">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="#Solution"/>
  <rdfs:subPropertyOf rdf:resource="#hasSolution"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasSubProblem">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:domain rdf:resource="#Problem"/>
  <rdfs:range rdf:resource="#Problem"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasSolvingMethod"/>

<owl:ObjectProperty rdf:about="#hasUnknown">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="#Unknown"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isPreferredTo"/>

<owl:DatatypeProperty rdf:about="#degree">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:domain rdf:resource="#PolynomialEquation"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasEquality">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasExpression">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasName">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasType">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasValue">
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#isAPolynomialEquation">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#isASquareMatrix">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
</owl:DatatypeProperty>

<owl:AnnotationProperty rdf:about="#parameters"/>

<owl:Class rdf:about="#Equation"/>

<owl:Class rdf:about="#Matrix"/>

<owl:Class rdf:about="#Problem"/>

<owl:Class rdf:about="#Solution"/>

<owl:Class rdf:about="#Unknown">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasName"/>
      <owl:cardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:cardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:Class rdf:about="#PolynomialEquation">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Equation1RealUnknown"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#isAPolynomialEquation"/>
          <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:hasValue>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#Equation1RealUnknown"/>
</owl:Class>

<owl:Class rdf:about="#Equation1RealUnknown">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Equation"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasUnknown"/>
          <owl:onClass>
            <owl:Restriction>
              <owl:onProperty rdf:resource="#hasType"/>
              <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</owl:hasValue>
            </owl:Restriction>
          </owl:onClass>
          <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:qualifiedCardinality>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#Equation"/>
</owl:Class>

<owl:Class rdf:about="#Equation2ndDegree">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#PolynomialEquation"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#degree"/>
          <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</owl:hasValue>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#PolynomialEquation"/>
</owl:Class>

<owl:Class rdf:about="#EquationSolving">
  <rdfs:subClassOf>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Problem"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasEquation"/>
          <owl:someValuesFrom rdf:resource="#Equation"/>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </rdfs:subClassOf>
  <rdfs:subClassOf rdf:resource="#Problem"/>
</owl:Class>

<owl:Class rdf:about="#FindingEigenValues">
  <rdfs:subClassOf rdf:resource="#Problem"/>
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasMatrix"/>
      <owl:onClass rdf:resource="#SquareMatrix"/>
      <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:qualifiedCardinality>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:Class rdf:about="#SquareMatrix">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#Matrix"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#isASquareMatrix"/>
          <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:hasValue>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#Matrix"/>
</owl:Class>

<owl:Class rdf:about="#FindingRoots">
  <rdfs:subClassOf rdf:resource="#Problem"/>
</owl:Class>

<owl:Class rdf:about="#Polynomial"/>

<owl:Class rdf:about="#QuadraticEquationSolving">
  <owl:equivalentClass>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <rdf:Description rdf:about="#EquationSolving"/>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasEquation"/>
          <owl:someValuesFrom rdf:resource="#Equation2ndDegree"/>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </owl:equivalentClass>
  <rdfs:subClassOf rdf:resource="#EquationSolving"/>
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasSolvingMethod"/>
      <owl:hasValue rdf:resource="#funFindObviousRootQuadEq"/>
    </owl:Restriction>
  </rdfs:subClassOf>
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="#hasSolvingMethod"/>
      <owl:hasValue rdf:resource="#funUseDiscriminant"/>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

<owl:Class rdf:about="#SolutionSet">
  <rdfs:subClassOf rdf:resource="#Solution"/>
  <rdfs:subClassOf>
    <owl:Class>
      <owl:intersectionOf rdf:parseType="Collection">
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasValue"/>
          <owl:allValuesFrom rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        </owl:Restriction>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasValue"/>
          <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">0</owl:minCardinality>
        </owl:Restriction>
        <owl:Restriction>
          <owl:onProperty rdf:resource="#hasValue"/>
          <owl:maxCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:maxCardinality>
        </owl:Restriction>
      </owl:intersectionOf>
    </owl:Class>
  </rdfs:subClassOf>
  <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">represents the roots of a second degree equation. (depends on the used method)

Warning, this isn't the class representing the solutions of the problem of solving a second degree equation (which is the Solution class).

DatatypeProperty annotations are essential to understand which property has to be set when the call create an instance.
Right now, it only works with one datatypeProperty per class. (With multiple ones, it's difficult to know which one relates to which result of the called function)</rdfs:comment>
</owl:Class>

<owl:NamedIndividual rdf:about="#funFindObviousRootQuadEq">
  <isPreferredTo rdf:resource="#funUseDiscriminant"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def poly_obvious_roots(unk_name: str, equality: str):
    import sympy as sp

    unk = sp.symbols(unk_name)
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    eq = sp.Eq(sp.sympify(eq_str[0]), sp.sympify(eq_str[1])).simplify().as_poly()
    for value in range(-2, 3):
        subst_expr = eq.subs(unk, value)
        res = subst_expr.evalf()
        # if we found an obvious root
        if res == 0:
            root1 = value
            coeffs = eq.all_coeffs()
            root2 = -(coeffs[1]/coeffs[0])-root1
            # negative values mess up the order of sets, so I do it manually
            result = {root1, root2} if root1 &lt;= root2 else {root2, root1}
            
            return 0, [(0, "hasValue", str(result))]
    return None</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">poly_obvious_roots</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funUseDiscriminant">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def poly_roots(unk_name: str, equality: str):
    import sympy as sp
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    
    eq = sp.Eq(sp.simplify(eq_str[0]), sp.simplify(eq_str[1])).simplify().as_poly()
    roots =sp.roots(eq)
    result = None
    if len(roots) &lt; 2:
        result = {*roots}
    elif len(roots) == 2:
        l = list(roots)
        result = {l[0], l[1]} if l[0] &lt;= l[1] else {l[1], l[0]}
        return 0, [(0, "hasValue", str(result))]
    else:
        return None</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">poly_roots</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callDegree">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
  <call:functionToCall rdf:resource="#funDegree"/>
  <call:hasParams rdf:resource="#paramsDegree"/>
  <call:domain rdf:resource="#PolynomialEquation"/>
  <call:range rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
  <call:subsumingProperty rdf:resource="#degree"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funDegree">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def poly_degree(unk_name: str, equality: str):
    import sympy as sp
    unk = sp.symbols(unk_name)
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    else:
        eq = sp.Eq(sp.sympify(eq_str[0]), sp.sympify(eq_str[1]), evaluate=False).simplify().as_poly(unk)
        if eq is None:
            return None
        else:
            deg = eq.degree(unk)
            return -1 if deg == -sp.oo else deg</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">poly_degree</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#paramsDegree">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:head rdf:resource="#pcEquations1"/>
  <call:tail>
    <rdf:Description>
      <call:head rdf:resource="#pcEquations2"/>
    </rdf:Description>
  </call:tail>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callFindEigenValues">
  <call:functionToCall rdf:resource="#funFindEigenValues"/>
  <call:hasParams rdf:resource="#paramsFindEigenValues"/>
  <call:domain rdf:resource="#FindingEigenValues"/>
  <call:range rdf:resource="#FindingRoots"/>
  <call:subsumingProperty rdf:resource="#hasSubProblem"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funFindEigenValues">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def matrixToPolynomial(expr:str):
    import sympy as sp
    mat = sp.Matrix(eval(expr))
    if not mat.is_square:
        return None
    
    return "a", [("Polynomial", "p"), ("a", "hasPolynomial", "p"), ("p", "hasExpression", str(mat.charpoly("t").as_expr()))]</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">matrixToPolynomial</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#paramsFindEigenValues">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:head rdf:resource="#pcFindEigenValues"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callFindObviousRootQuadEq">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
  <call:functionToCall rdf:resource="#funFindObviousRootQuadEq"/>
  <call:hasParams rdf:resource="#paramsQuadEqSolving"/>
  <call:domain rdf:resource="#QuadraticEquationSolving"/>
  <call:range rdf:resource="#SolutionSet"/>
  <call:subsumingProperty rdf:resource="#hasSolutionSet"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#paramsQuadEqSolving">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:head rdf:resource="#pcQuadEqSolving1"/>
  <call:tail>
    <rdf:Description>
      <call:head rdf:resource="#pcQuadEqSolving2"/>
    </rdf:Description>
  </call:tail>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callFindRoots">
  <call:functionToCall rdf:resource="#funFindRoots"/>
  <call:hasParams rdf:resource="#paramsFindRoots"/>
  <call:domain rdf:resource="#FindingRoots"/>
  <call:range rdf:resource="#EquationSolving"/>
  <call:subsumingProperty rdf:resource="#hasSubProblem"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funFindRoots">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def polynomialToEquation(expr:str):
    
    return "a", [("PolynomialEquation", "e"), ("Unknown","u"), ("a", "hasEquation", "e"), ("e", "hasUnknown", "u"), ("u", "hasType", "real"),
                    ("e", "hasEquality", expr+" = 0"), ("u", "hasName", "t")]</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">polynomialToEquation</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#paramsFindRoots">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:head rdf:resource="#pcFindRoots"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callIsAPolynomialEquation">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
  <call:functionToCall rdf:resource="#funIsAPolynomialEquation"/>
  <call:hasParams rdf:resource="#paramsDegree"/>
  <call:domain rdf:resource="#Equation1RealUnknown"/>
  <call:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
  <call:subsumingProperty rdf:resource="#isAPolynomialEquation"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#funIsAPolynomialEquation">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PythonFunction"/>
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallableThing"/>
  <call:hasPyExec rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def is_polynomial(unk_name: str, equality: str):
    import sympy as sp
    unk = sp.symbols(unk_name)
    eq_str = equality.split("=")
    if len(eq_str) != 2:
        return None
    else:
        eq = sp.Eq(sp.sympify(eq_str[0]), sp.sympify(eq_str[1]), evaluate=False).simplify().as_poly(unk)
        return True if eq is not None else None</call:hasPyExec>
  <call:hasPyExpr rdf:datatype="http://www.w3.org/2001/XMLSchema#string">is_polynomial</call:hasPyExpr>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#callUseDiscriminant">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#CallFormula"/>
  <call:functionToCall rdf:resource="#funUseDiscriminant"/>
  <call:hasParams rdf:resource="#paramsQuadEqSolving"/>
  <call:domain rdf:resource="#QuadraticEquationSolving"/>
  <call:range rdf:resource="#SolutionSet"/>
  <call:subsumingProperty rdf:resource="#hasSolutionSet"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#eq1">
  <rdf:type rdf:resource="#Equation1RealUnknown"/>
  <hasUnknown rdf:resource="#unk1"/>
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <rdf:type rdf:resource="#Equation2ndDegree"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">x ** 2 + 2 = -3 * x</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#unk1">
  <rdf:type rdf:resource="#Unknown"/>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">x</hasName>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#eq2">
  <rdf:type rdf:resource="#Equation1RealUnknown"/>
  <hasUnknown rdf:resource="#unk2"/>
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <rdf:type rdf:resource="#Equation2ndDegree"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">t ** 2 + 4 * t + 1 = 0</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#unk2">
  <rdf:type rdf:resource="#Unknown"/>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">t</hasName>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#eq3">
  <rdf:type rdf:resource="#Equation1RealUnknown"/>
  <hasUnknown rdf:resource="#unk1"/>
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">1</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">4 * x = 2</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#mat1">
  <rdf:type rdf:resource="#SquareMatrix"/>
  <hasExpression rdf:datatype="http://www.w3.org/2001/XMLSchema#string">[[2, 1], [1, 2]]</hasExpression>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pcEquations1">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:head rdf:resource="#hasUnknown"/>
  <call:tail>
    <rdf:Description>
      <call:head rdf:resource="#hasName"/>
    </rdf:Description>
  </call:tail>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pcEquations2">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:head rdf:resource="#hasEquality"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#paramsExpression">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#ParamList"/>
  <call:head rdf:resource="#pcExpression"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pcExpression">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:head rdf:resource="#hasExpression"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pcFindEigenValues">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:head rdf:resource="#hasMatrix"/>
  <call:tail>
    <rdf:Description>
      <call:head rdf:resource="#hasExpression"/>
    </rdf:Description>
  </call:tail>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pcFindRoots">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:head rdf:resource="#hasPolynomial"/>
  <call:tail rdf:resource="#pcExpression"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pcQuadEqSolving1">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:head rdf:resource="#hasEquation"/>
  <call:tail rdf:resource="#pcEquations1"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pcQuadEqSolving2">
  <rdf:type rdf:resource="https://k.loria.fr/ontologies/call#PropertyChain"/>
  <call:head rdf:resource="#hasEquation"/>
  <call:tail rdf:resource="#pcEquations2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pb1">
  <rdf:type rdf:resource="#EquationSolving"/>
  <hasEquation rdf:resource="#eq1"/>
  <rdf:type rdf:resource="#QuadraticEquationSolving"/>
  <hasSolvingMethod rdf:resource="#funUseDiscriminant"/>
  <hasSolvingMethod rdf:resource="#funFindObviousRootQuadEq"/>
  <hasSolutionSet rdf:resource="#solutionset3"/>
  <hasSolutionSet rdf:resource="#solutionset4"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pb2">
  <rdf:type rdf:resource="#EquationSolving"/>
  <hasEquation rdf:resource="#eq2"/>
  <rdf:type rdf:resource="#QuadraticEquationSolving"/>
  <hasSolvingMethod rdf:resource="#funUseDiscriminant"/>
  <hasSolvingMethod rdf:resource="#funFindObviousRootQuadEq"/>
  <hasSolutionSet rdf:resource="#solutionset5"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#pb3">
  <rdf:type rdf:resource="#FindingEigenValues"/>
  <hasMatrix rdf:resource="#mat1"/>
  <hasSubProblem rdf:resource="#findingroots1"/>
  <hasSolution rdf:resource="#solutionset1"/>
  <hasSolution rdf:resource="#solutionset2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#findingroots1">
  <rdf:type rdf:resource="#FindingRoots"/>
  <hasPolynomial rdf:resource="#polynomial1"/>
  <hasSubProblem rdf:resource="#equationsolving1"/>
  <hasSolution rdf:resource="#solutionset1"/>
  <hasSolution rdf:resource="#solutionset2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#polynomial1">
  <rdf:type rdf:resource="#Polynomial"/>
  <hasExpression rdf:datatype="http://www.w3.org/2001/XMLSchema#string">t**2 - 4*t + 3</hasExpression>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#equationsolving1">
  <rdf:type rdf:resource="#EquationSolving"/>
  <hasEquation rdf:resource="#polynomialequation1"/>
  <rdf:type rdf:resource="#QuadraticEquationSolving"/>
  <hasSolvingMethod rdf:resource="#funUseDiscriminant"/>
  <hasSolvingMethod rdf:resource="#funFindObviousRootQuadEq"/>
  <hasSolutionSet rdf:resource="#solutionset1"/>
  <hasSolutionSet rdf:resource="#solutionset2"/>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#polynomialequation1">
  <rdf:type rdf:resource="#PolynomialEquation"/>
  <hasUnknown rdf:resource="#unknown1"/>
  <rdf:type rdf:resource="#Equation2ndDegree"/>
  <degree rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</degree>
  <hasEquality rdf:datatype="http://www.w3.org/2001/XMLSchema#string">t**2 - 4*t + 3 = 0</hasEquality>
  <isAPolynomialEquation rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</isAPolynomialEquation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#unknown1">
  <rdf:type rdf:resource="#Unknown"/>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">t</hasName>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">real</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#solutionset1">
  <rdf:type rdf:resource="#SolutionSet"/>
  <hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">{1, 3}</hasValue>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#solutionset2">
  <rdf:type rdf:resource="#SolutionSet"/>
  <hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">{1, 3}</hasValue>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#solutionset3">
  <rdf:type rdf:resource="#SolutionSet"/>
  <hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">{-2, -1}</hasValue>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#solutionset4">
  <rdf:type rdf:resource="#SolutionSet"/>
  <hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">{-2, -1}</hasValue>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#solutionset5">
  <rdf:type rdf:resource="#SolutionSet"/>
  <hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#string">{-2 + sqrt(3), -2 - sqrt(3)}</hasValue>
</owl:NamedIndividual>

<rdf:Description>
  <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">def</rdfs:comment>
</rdf:Description>

<owl:AllDisjointProperties>
  <owl:members rdf:parseType="Collection">
    <rdf:Description rdf:about="#hasEquation"/>
    <rdf:Description rdf:about="#hasSolvingMethod"/>
    <rdf:Description rdf:about="#hasUnknown"/>
    <rdf:Description rdf:about="#isPreferredTo"/>
  </owl:members>
</owl:AllDisjointProperties>

<rdf:Description>
  <rdfs:seeAlso>
    <rdf:Description>
      <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">tete3</rdfs:comment>
    </rdf:Description>
  </rdfs:seeAlso>
  <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string">tete2</rdfs:comment>
</rdf:Description>


</rdf:RDF>
